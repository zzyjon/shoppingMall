<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="moosinsa_members">
	<!-- 회원정보보기 -->
	<select id="selectMemberList" parameterType="com.lsm.web.moosinsa.member.MemberSVO"
		resultType="com.lsm.web.moosinsa.member.MemberVO">
<![CDATA[
		select
		m_no,
		m_id,
		m_grade,
		m_name,
		m_nick,
		m_gender,
		m_email,
		m_phone,
		m_point,
		m_post,
		m_birth,
		m_main_address,
		m_sub_address,
		m_buy_sum,
		m_visit_count,
		m_post,
		m_reg_date,
		m_bann_date,
		m_login_date
		from member left join grade 
		on m_buy_sum where m_buy_sum>=g_buy_min_price and m_buy_sum<=g_buy_max_price and 1=1
]]>
		<!-- 키워드검색 -->
		<if test="memberSearchKeyType != null and memberSearchKeyType == 'all'">

			and m_name= #{memberSearchKeyWord}
			OR
			m_nick=#{memberSearchKeyWord}
			OR
			m_id= #{memberSearchKeyWord}

		</if>
		<if test="memberSearchKeyType != null and memberSearchKeyType == 'name'">
			and m_name= #{memberSearchKeyWord}
		</if>
		<if test="memberSearchKeyType != null and memberSearchKeyType == 'nick'">
			and m_nick= #{memberSearchKeyWord}
		</if>
		<if test="memberSearchKeyType != null and memberSearchKeyType == 'id'">
			and m_id = #{memberSearchKeyWord}
		</if>

		<!-- 구매금액 검색 -->

		<if
			test="(buySumMin != null and buySumMin  != 0) and (buySumMax != null and buySumMax != 0)">
			<![CDATA[
			and m_buy_sum between #{buySumMin} and #{buySumMax}
			]]>
		</if>
		<if test="buySumMin != null and buySumMin != 0"> 
			<![CDATA[ and m_buy_sum >= #{buySumMin} ]]>
		</if>
		<if test="buySumMax != null and buySumMax != 0"> 
			<![CDATA[ and m_buy_sum <= #{buySumMax} ]]>
		</if>


		<!-- 적립금 검색 -->

		<if
			test="(pointMin != null and pointMin != 0) and (pointMax != null and pointMax != 0)">
			<![CDATA[
			and m_point between #{pointMin} and #{pointMax}
			]]>
		</if>
		<if test="pointMin != null and pointMin != 0"> 
			<![CDATA[ and m_point >= #{pointMin} ]]>
		</if>
		<if test="pointMax != null and pointMax != 0"> 
			<![CDATA[ and m_point <= #{pointMax} ]]>
		</if>

		<!-- 가입날짜 조회 -->
		<if
			test="(regDateStart != null and regDateStart !='') and (regDateEnd != null and regDateEnd != '')">
		<![CDATA[
			and m_reg_date between #{regDateStart} and #{regDateEnd}
			]]>
		</if>
		<if test="regDateStart != null and regDateStart != ''">
			<![CDATA[ and DATE(m_reg_date) >= #{regDateStart} ]]>
		</if>
		<if test="regDateEnd != null and regDateEnd != ''">
			<![CDATA[ and DATE(m_reg_date) <= #{regDateEnd} ]]>
		</if>

		<!-- 최종로그인 날짜 조회 -->
		<if
			test="(loginDateStart != null and loginDateStart !='') and (loginDateEnd != null and loginDateEnd != '')">
		<![CDATA[
			and m_reg_date between #{loginDateStart} and #{loginDateEnd}
			]]>
		</if>
		<if test="loginDateStart != null and loginDateStart != ''">
			<![CDATA[ and DATE(m_login_date) >= #{loginDateStart} ]]>
		</if>
		<if test="loginDateEnd != null and loginDateEnd != ''">
			<![CDATA[ and DATE(m_login_date) <= #{loginDateEnd} ]]>
		</if>



		<if test="gender != null and gender == 'M'">
			<![CDATA[ and m_gender = 'M' ]]>
		</if>
		<if test="gender != null and gender == 'W'">
			<![CDATA[ and m_gender = 'W' ]]>
		</if>

	</select>

	<!-- 회원 삭제 기능 -->
	<delete id="selectMemberDelete" parameterType="com.lsm.web.moosinsa.member.MemberVO">

		delete from member
		where m_no = #{mNo}
	</delete>




	<!-- 회원 등급 조회 -->
	<select id="selectMemberGradeList" resultType="com.lsm.web.moosinsa.member.MemberVO">
		<![CDATA[
		select
		g_no,g.m_grade, ifnull(t.cnt, 0) as cnt,g_buy_min_price,g_buy_max_price,g_discount,g_save_point
		from grade as g left join (
		select m_grade,count(m_no) as cnt from member,grade where m_buy_sum>=g_buy_min_price and m_buy_sum<=g_buy_max_price group by m_grade
		) as t
		on g.m_grade = t.m_grade
		
		 ]]>
	</select>

	<!-- 회원 등급 추가 -->
	<insert id="selectGradeInsert" parameterType="com.lsm.web.moosinsa.member.MemberVO">
		insert into
		grade(m_grade,g_buy_min_price,g_buy_max_price,g_discount,g_save_point)
		values
		(#{mGrade},#{gBuyMinPrice},#{gBuyMaxPrice},#{gDiscount},#{gSavePoint})

	</insert>

	<!-- 회원 등급 수정 -->
	<update id="selectGradeModify" parameterType="com.lsm.web.moosinsa.member.MemberVO">
		update member
		set
		m_grade=#{mGrade},
		g_buy_min_price=#{gBuyMinPrice}",
		g_buy_max_price=#{gBuyMaxPrice},
		g_discount=#{gDiscount},
		g_save_point=#{gSavePoint}
		where
		g_no=#{gNo};

	</update>

	<!-- 등급 삭제 기능 -->
	<select id="selectGradeDelete" parameterType="com.lsm.web.moosinsa.member.MemberVO">

		delete from grade
		where g_no = #{gNo}
	</select>

	<!-- 회원 정보보기 -->
	<select id="selectMemberView" parameterType="com.lsm.web.moosinsa.member.MemberVO"
		resultType="com.lsm.web.moosinsa.member.MemberVO">
		<![CDATA[
		select
		m_no,
		m_id,
		m_pw,
		m_name,
		m_nick,
		m_gender,
		m_birth,
		m_email,
		m_phone,
		m_post,
		m_point,
		m_grade,
		m_main_address,
		m_sub_Address,
		m_reg_date,
		m_login_date,
		g_buy_max_price,
		m_buy_sum
		from member inner join grade
		on m_buy_sum>=g_buy_min_price and m_buy_sum<=g_buy_max_price
		and
		m_id = #{mId};
		
		]]>
	</select>

	<!-- 회원 정보 수정 -->
	<update id="updateMemberInfo" parameterType="com.lsm.web.moosinsa.member.MemberVO">
		update member set
		m_pw=sha(#{mPw}),
		m_eMail=#{mEmail},
		m_phone=#{mPhone},
		m_post=#{mPost},
		m_main_address=#{mMainAddress},
		m_sub_address=#{mSubAddress}
		where m_Id
		= #{mId}

	</update>

	<!-- 회원 가입 -->

	<insert id="insertMemberRegist" parameterType="com.lsm.web.moosinsa.member.MemberVO">
		insert into member
		(
		m_id,
		m_pw,
		m_gender,
		m_name,
		m_nick,
		m_birth,
		m_email,
		m_phone,
		m_post,
		m_main_address,
		m_sub_address,
		m_reg_date
		) values(
		#{mId},
		sha(#{mPw}),
		#{mGender},
		#{mName},
		#{mNick},
		#{mBirth},
		#{mEmail},
		#{mPhone},
		#{mPost},
		#{mMainAddress},
		#{mSubAddress},
		current_timestamp
		)


	</insert>

	<!-- 아이디 & 별명중복체크 -->
	<select id="selectIdNickCheck" resultType="Integer"
		parameterType="com.lsm.web.moosinsa.member.MemberVO">
		select count(*) as cntCheck from member where 1=1 and
		m_id = #{mId}



	</select>

	<!-- 로그인 세션 처리 -->
	<select id="selectSessionLogin" parameterType="com.lsm.web.moosinsa.member.MemberVO"
		resultType="com.lsm.web.moosinsa.member.MemberVO">
		<![CDATA[
		select m_id, m_name, m_point, m_login_date from member where m_id = #{mId} and m_pw = sha(#{mPw})
		]]>
	</select>

	<!-- 로그인 날짜 업데이트 -->
	<update id="updateLoginDate" parameterType="com.lsm.web.moosinsa.member.MemberVO">
		update member set
		m_login_date = current_timestamp
		where m_id = #{mId}


	</update>

	<!-- 아이디/패스워드 찾기 -->
	<select id="selectSearchUserInfo" parameterType="com.lsm.web.moosinsa.member.MemberVO"
		resultType="com.lsm.web.moosinsa.member.MemberVO">

		select
		m_id,
		m_name,
		m_reg_date,
		(select count(m_id) from member where
		m_name = #{mName} and m_email =
		#{mEmail} )as cnt_mid
		from member where
		m_name = #{mName} and m_email = #{mEmail}
		<if test="mId != null and mId == ''">
			and m_id = #{mId}
		</if>


	</select>



	<!-- 내 정보 회원정보수정 처리 -->
	<update id="updateMemberModify" parameterType="com.lsm.web.moosinsa.member.MemberVO">
		update member set
		m_pw = sha(#{mPw}),
		m_email = #{mEmail},
		m_phone = #{mPhone},
		m_post = #{mPost},
		m_main_address = #{mMainAddress},
		m_sub_address = #{mSubAddress}
		where m_id = #{mId}

	</update>

	<!-- 아이디 찾기 후 비밀번호 수정 -->
	<update id="updatemPw" parameterType="com.lsm.web.moosinsa.member.MemberVO">
		update member set m_pw =
		sha(#{mPw}) where m_id=#{mId}

	</update>

	<!-- 회원등급 보기 -->
	<select id="selectGradeView"  resultType="com.lsm.web.moosinsa.member.MemberVO">
	<![CDATA[
		select g_no,m_grade,g_buy_min_price,g_buy_max_price,g_discount,g_save_point from grade
		
	]]>

	</select>
	
	
	<!-- 내회원등급 보기(detail) -->
	<select id="selectGradeViewDetail" parameterType="com.lsm.web.moosinsa.member.MemberVO" resultType="com.lsm.web.moosinsa.member.MemberVO">
	<![CDATA[
		select m_id,m_name,m_grade,
		(select ifnull((select g_buy_min_price from grade
		where g_no = (
		select
		g_no + 1
		from member inner join grade
		on m_buy_sum>=g_buy_min_price and m_buy_sum<=g_buy_max_price
		and
		m_id = #{mId})),0)
		-
		(select m_buy_sum
		from member
		where m_id = #{mId}
		)) as remain_price,
		(select ifnull((select m_grade from grade
		where g_no = (
		select
		g_no + 1
		from member inner join grade
		on m_buy_sum>=g_buy_min_price and m_buy_sum<=g_buy_max_price
		and
		m_id = #{mId})),0))as next_grade from member inner join grade
		on m_buy_sum>=g_buy_min_price and m_buy_sum<=g_buy_max_price
		and
		m_id = #{mId}
	]]>
	</select>


</mapper>